<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>eternal-bug的博客</title>
  
  
  <link href="https://eternal-bug.github.io/atom.xml" rel="self"/>
  
  <link href="https://eternal-bug.github.io/"/>
  <updated>2023-06-18T11:49:41.495Z</updated>
  <id>https://eternal-bug.github.io/</id>
  
  <author>
    <name>eternal-bug</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用github和Hexo搭建个人博客</title>
    <link href="https://eternal-bug.github.io/2023/06/18/20230618-%E4%BD%BF%E7%94%A8github%E5%92%8CHexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://eternal-bug.github.io/2023/06/18/20230618-%E4%BD%BF%E7%94%A8github%E5%92%8CHexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2023-06-18T11:35:52.000Z</published>
    <updated>2023-06-18T11:49:41.495Z</updated>
    
    <content type="html"><![CDATA[<p><strong>这个文件会不断更新</strong></p><p>这两天外面下雨闲着没事准备做一个博客，看网上说要什么搞个域名、买个服务器啊、然后部署啊之类的，觉得有点麻烦，我怕这种麻烦会让我还没开始就结束了写博客之旅，所以就准备用github来托管一下博客，这个比较方便。唯一不好的就是国内上github不稳定，网速还慢，但是相较于在CSDN这个（CSDN Steals Documents on Network）上写博客对于身心健康来说是大有脾益的；相较于gitee的代码审核，github可以即时展示。</p><p>本文主要参考的<a href="https://zhuanlan.zhihu.com/p/26625249">GitHub+Hexo 搭建个人网站详细教程</a>进行，为了简洁，关于工具的详细介绍这里不赘述，只写关键的代码部分。</p><h2 id="0-介绍">0. 介绍</h2><p>有关于Hexo是什么和github这里不多说，只说说比较的关键的和写博客密切相关的东西。我个人理解的github + Hexo的博客的流程图：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">编写markdown格式的博文</span><br><span class="line">        |</span><br><span class="line">        v</span><br><span class="line">使用Hexo把markdown转换为html文件</span><br><span class="line">        |</span><br><span class="line">        v</span><br><span class="line">使用Hexo把文件上传到github</span><br><span class="line">        |</span><br><span class="line">        v</span><br><span class="line">访问xxx.github.io（github是公网大家都能访问）</span><br><span class="line">        |</span><br><span class="line">        v</span><br><span class="line">github按照对应路径给出对应的静态html文件</span><br><span class="line">        |</span><br><span class="line">        v</span><br><span class="line">浏览器渲染页面</span><br></pre></td></tr></table></figure><p>hexo就是一个比较方便的把你写的markdown的文章按照你指定的主题转换为html文件的工具，也就是说除了hexo你也可以用其他的工具比如Hugo，甚至是你自己手写html然后放到github都可以；github实际上就是按照特定的路径把你事先准备好的html文件给显示出来，这就是托管作用。</p><p>比如可以看<a href="https://github.com/Haojen/haojen.github.io">hexo-theme-Claudia作者的github博客</a>，里面就是按照日期的文件夹，下面对应的就是一个<code>index.html</code>文件，当然了，还会有一些<code>css</code>、<code>js</code>文件。</p><p><strong>注意：下面的操作均是在windows系统上进行。</strong></p><h2 id="1-安装npm">1. 安装npm</h2><p>下载windows的node：<a href="https://nodejs.org/dist/v18.16.0/node-v18.16.0-x64.msi">https://nodejs.org/dist/v18.16.0/node-v18.16.0-x64.msi</a></p><p>安装之后打开cmd测试一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><blockquote><p>在对应的文件夹右键，打开cmd（或者直接在任务栏的搜索里面搜索cmd）。如果没有，我推荐再安装一个ConEmu，然后右键会出现一个<code>ConEmu Here</code>。</p></blockquote><p>安装hexo插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h2 id="2-安装git">2. 安装git</h2><p>进入<a href="https://git-scm.com/download/win">git for windows</a>下载git，下载完成之后安装。完成之后在桌面右键，看是否多了两个选项：<code>git GUI here</code>、<code>git bash here</code>。</p><h2 id="3-初始化博客">3. 初始化博客</h2><p>新建一个文件夹，比如<code>D:/博客/</code>，（这个文件夹是需要比较稳定的，不能放在随手不注意给删除了地方比如桌面之类的）。打开cmd，然后输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这里文件夹的路径你可以修改为其他位置</span></span><br><span class="line">md D:/博客</span><br><span class="line"><span class="built_in">cd</span> D:/博客</span><br></pre></td></tr></table></figure><p>进入这个文件夹，之后输出下面的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新建一个hexo的项目（blog可以更改为你认为合适的名字）</span></span><br><span class="line">hexo init blog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入新建项目的内部</span></span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line"><span class="comment"># 新建一个文章名叫test_my_site</span></span><br><span class="line">hexo new test_my_site</span><br><span class="line"><span class="comment"># 启动本地服务</span></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>你会看到在cmd中出现这些文字：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>打开浏览器，输入<code>http://localhost:4000</code>，你可以一个Hexo的地平线的网页，表示你创建成功了。</p><h2 id="4-更改主题">4. 更改主题</h2><p>默认的主题有点历史感，目前我个人喜欢<a href="https://github.com/Haojen/hexo-theme-Claudia">Haojen/hexo-theme-Claudia</a> - <a href="https://haojen.github.io/Claudia-theme-blog/">Demo</a></p><p>如果上面服务开启了，先<code>ctrl + c</code>关闭掉，然后输入下面的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/Haojen/hexo-theme-Claudia.git themes/Claudia</span><br></pre></td></tr></table></figure><blockquote><p>如果上面git clone不下来，可以直接下载<a href="https://codeload.github.com/Haojen/hexo-theme-Claudia/zip/refs/heads/master">hexo-theme-Claudia.zip</a>，然后把文件夹解压放到<code>themes</code>文件夹里面，然后把文件夹名称更改为<code>Claudia</code>。</p></blockquote><p>然后下载这个主题的依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注意安装下面的包一定是要在blog根目录下</span></span><br><span class="line"><span class="built_in">cd</span> D:/博客/blog</span><br><span class="line"></span><br><span class="line">npm install hexo-renderer-pug </span><br><span class="line">npm install hexo-renderer-dartsass</span><br><span class="line">npm install hexo-generator-search</span><br><span class="line"></span><br><span class="line"><span class="comment"># if you need RSS, you must be install this plugin</span></span><br><span class="line">npm install hexo-generator-feed</span><br><span class="line"></span><br><span class="line"><span class="comment"># Flowchat</span></span><br><span class="line">npm install hexo-filter-flowchart        </span><br><span class="line"><span class="comment"># Math</span></span><br><span class="line">npm install hexo-renderer-mathjax</span><br></pre></td></tr></table></figure><p>打开<code>blog/_config.yml</code>文件，将下面这一行修改为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># theme: landscape</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">Claudia</span></span><br></pre></td></tr></table></figure><p>保存，再次输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>继续在浏览器中输入<code>http://localhost:4000</code>查看主题是否更改了。</p><h2 id="5-编写文章">5. 编写文章</h2><p>写的文章都是放在<code>D:/博客/blog/source/_posts</code>下面，你可以看到之前我们生成的<code>test-my-site.md</code>文件，这里的笔记都是使用<code>markdown</code>格式编写的，如果不了解这个格式可以搜索<a href="https://markdown.com.cn/basic-syntax/">markdown语法</a>学习。</p><p>比如这里我想写一个新的文章，名叫<code>使用github和Hexo搭建个人博客</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;使用github和Hexo搭建个人博客&quot;</span></span><br></pre></td></tr></table></figure><p>然后里面写上这些内容：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 使用github + Hexo搭建个人博客</span><br><span class="line">date: 2023-06-17 22:31:58</span><br><span class="line"><span class="section">tags: </span></span><br><span class="line"><span class="section">---</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 1. 安装node</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 2. 安装git</span></span><br><span class="line"></span><br><span class="line"><span class="section">## ...</span></span><br></pre></td></tr></table></figure><blockquote><p>注意文章中<code>title</code>、<code>date</code>、<code>tags</code>之类的东西不要删除掉，这是用来对文章进行排序和显示博文标题的。</p></blockquote><p>以后在编写文章的时候推荐使用一个markdown的编辑器，我这里用的是Typora的历史版本（免费的那一版），然后可以在里面编写好粘贴在使用<code>hexo new</code>生成的文件下面，然后修改一下<code>title</code>、<code>date</code>、<code>tags</code>的内容。</p><h2 id="6-其他调整">6. 其他调整</h2><p>因为一些信息是默认的，我们需要更改为自己的信息，下面是一些常见的需要更高的地方：</p><p><strong>1) Hexo的配置文件</strong></p><p>注意这里打开的是<code>blog/_config.yml</code>，里面的这几项最好修改：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 你的博客的站点的名称</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">eternal-bug的博客</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># 作者</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">eternal-bug</span></span><br><span class="line"><span class="comment"># 语言</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="comment"># 时区</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 网站地址（更改为你自己的github博客的地址）</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://eternal-bug.github.io</span></span><br></pre></td></tr></table></figure><blockquote><p>注意，因为yml格式，在上面的<code>:</code>后面一定要有一个空格，不然这个格式会识别不出来，另外除了中文文字和句子中的标点之外，其他的所有的包括逗号空格，都需要是在英文输入状态下输入。</p></blockquote><h2 id="7-上传到github">7. 上传到github</h2><p>现在是在本地查看，需要将这些东西上传到github上可以让其他人能访问到。</p><p><strong>1) github注册</strong></p><p>如果你没有github，需要注册一个github，然后新建一个GitHub账号，具体怎么申请，这里不赘述，如果有你直接登录就可以。</p><p><strong>2) 新建仓库</strong></p><p>申请好账号和登录github之后，你需要点击右上角的<code>+</code>，然后<code>New repository</code>，在<code>Repository Name</code>下面填上<code>你的github名字.github.io</code>（<strong>必须这么写</strong>，比如我的github的名字是eternal-bug，那么我就写上<code>eternal-bug.github.io</code>），其他的不用动，只需要给<code>Add a README.md</code>前面打勾。这个时候你可以打开<code>https://eternal-bug.github.io/</code>就已经可以访问了（<code>eternal-bug</code>更改为你的github的名字），只不过是默认页面。</p><p><strong>3) 添加SSH关联</strong></p><p>因为上传是需要口令的，这里需要申请一个口令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置用户名</span></span><br><span class="line">git config --global user.name eternal-bug</span><br><span class="line"><span class="comment"># 输入申请github账号时候的邮箱</span></span><br><span class="line">git config --global user.email xxxxxxxxxx@qq.com</span><br></pre></td></tr></table></figure><blockquote><p>第一次登录时，Git会提示你输入密码，但出于保密因素，除“Enter your password: ”这行系统提示消息外，命令行不会显示任何字符，也不会在你输入或删除字符时用增减星号（井号）表示，因此输入密码时，最好放慢速度，避免因打字过快而输错。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 申请口令</span></span><br><span class="line">ssh-keygen -t rsa -C xxxxxxxxxx@qq.com</span><br></pre></td></tr></table></figure><p>会弹出下面的话，直接回车就好了（这是是让你上传github代码的时候输入的密码，因为这是我自己的电脑，密钥文件也是存在我这里这里，所以这个不需要设置密码）：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Enter file in which to save the key (/c/Users/tanglab_lzh/.ssh/id_rsa):</span><br><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br></pre></td></tr></table></figure><p>完成之后，会在你的电脑的<code>C:\Users\XXX\.ssh</code>下面有（XXX表示你的电脑的用户名字）</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id_rsa</span><br><span class="line">id_rsa.pub</span><br></pre></td></tr></table></figure><p>两个文件。打开<code>id_rsa.pub</code>，然后按下<code>ctrl+a</code>选中所有的文本。</p><p>再次进入到github的界面，<code>点击个人头像</code>-&gt;<code>Setting</code>-&gt;点击<code>SSH and GPG keys</code>-&gt;点击SSH keys右侧<code>New SSH key</code>，在<code>title</code>里面填上你自己认识的名称，然后在key一栏中粘贴刚才从<code>id_rsa.pub</code>文件中复制过来的内容。点击<code>Add SSH key</code>完成口令的添加。</p><p><strong>4) 上传</strong></p><p>修改<code>blog/_config.yml</code>中的对应内容，拉到最下面：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:eternal-bug/eternal-bug.github.io.git</span></span><br><span class="line">  <span class="comment"># 早些时候github主分支是master，但是从2020年10月01日开始美国为了政治正确，将master分支名称更改为了main，所以这里与时俱进写为main</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><p>回到本地，现在需要上传，进入<code>blog</code>文件夹，然后输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 清理之前生成的静态文件</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="comment"># 生成静态文件</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="comment"># 将文件推到github上面</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>如果出现：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host &#x27;github.com (xx.xxx.xxx.xxx)&#x27; can&#x27;t be established.</span><br><span class="line">ECDSA key fingerprint is SHA256:xxxxxxxxxxxxxxxxxxxxxx/xxxxxxx/xxxx.</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])?</span><br></pre></td></tr></table></figure><p>输入<code>yes</code>，回车，如果出现：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase</span><br></pre></td></tr></table></figure><p>直接回车。</p><p>最后如果出现：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Deploy done: git</span><br></pre></td></tr></table></figure><p>表示上传成功，这个时候可以去你的github上查看。</p><blockquote><p><strong>注意</strong></p><p>因为之前很多教程是让把<code>branch: </code>写为<code>branch: master</code>的，如果你上传之后发现github的博客文件夹中的文件没有变化，这是因为现在主分支是<code>main</code>，一般可以把<code>master</code>合并到<code>main</code>中，但是相对于来说步骤比较多，这里直接把<code>branch: master</code>更改为<code>branch: main</code>然后再<code>hexo g</code>一次就可以了。</p></blockquote><h2 id="8-查看效果">8. 查看效果</h2><p>打开网址<code>https://eternal-bug.github.io</code>查看效果（这里你需要把<code>eternal-bug</code>更改为你的github的名字）。</p><h2 id="9-更多优化">9. 更多优化</h2><p>这里我们只是测试了一下基本的功能，把最主要的步骤走了一遍，但是页面不是很好看细节不够，还有更加丰富的东西去探索。</p><h3 id="9-1-如何分门别类">9.1 如何分门别类</h3><p><strong>0) 博客项目说明</strong></p><p><code>blog/public</code>的目录下没有一个<code>README.md</code>文件，在你的github的页面，比如<code>https://github.com/eternal-bug/eternal-bug.github.io</code>下面，点进去没有介绍，这个不是必要的，但是为了更加完整，可以在上面执行<code>hexo g</code>把本地的文件上传的时候，放一个<code>README.md</code>到<code>blog/public</code>里面，当然你可以一直放在这个文件夹里面随时更改。</p><p><strong>1) 文章标签</strong></p><p>在写的博文多了之后，如果按照时间线或者一页一页的去找是很麻烦的（不过<code>Claudia</code>主题包含了全文搜索的功能可以用一下），需要对文章分类，可以通过打标签的方式去给博文分类。</p><p><strong>3) 关于页面</strong></p><p>一个博客没有关于自己的页面你写着博客就没劲啊，在这里可以介绍一下自己。</p><p><strong>4) 404页面</strong></p><p>如果不设置这个页面，在网页访问出错（比如原来你写了某一篇博客，但是后来更改了名称或者删除，别人保存了网址书签，再去访问）会出现的页面，如果不设置<code>404</code>的页面，会简单的弹出灰扑扑的<code>404</code>怼到浏览器面前</p><h3 id="9-2-如何美化页面">9.2 如何美化页面</h3><p><strong>1) 图片</strong></p><p>你可以看到在Claudia主题的页面，它的文章上面是有一张图的，这个你可以自己去上传一个，但是现在这个图片放在哪？</p><p><strong>2) 字体</strong></p><h3 id="9-3-个性化设置">9.3 个性化设置</h3><p>比如你想添加一个网易云音乐的播放按钮，你可以在markdown中添加这个代码：</p><p>比如你想添加一个b站的视频的播放界面，可以放入这个代码：</p><p>你如果对于<code>html</code>和<code>css</code>语法比较了解的，可以自己去修改主题的内部的东西得到你自己想要的效果。</p><h3 id="9-4-其他主题">9.4 其他主题</h3><p>除了上面主题之外，你也可以去<a href="https://hexo.io/themes/">hexo主题列表 - themes</a>看更多的主题，注意最好是选择标记有<code>#中文</code>的主题，比如<code>Next</code>、<code>ButterFly</code>主题。但是我觉得<code>Next</code>主题过于简洁，而且很容易和其他人的博客“撞衫”，色调太单调了；<code>ButterFly</code>主题也还不错可以试一试。</p><p>你可以按照上面的更换主题的方式进行更换，只需要注意安装主题的以来包，然后再对主题的配置进行细节的配置。</p><h3 id="9-5-访问统计">9.5 访问统计</h3><p>可以使用百度和谷歌的统计。</p><h2 id="参考">参考</h2><ul><li><a href="https://hexo.io/zh-cn/docs/index.html">Hexo文档</a></li><li><a href="https://zhuanlan.zhihu.com/p/35668237">超详细Hexo+Github博客搭建小白教程</a></li><li><a href="https://www.zhihu.com/question/24422335/answer/1632402674">有哪些好看的 Hexo 主题？</a></li><li><a href="https://www.zhihu.com/question/24422335/answer/115800792">有哪些好看的 Hexo 主题？</a></li><li><a href="http://tanglab.pku.edu.cn/2022/11/24/R&amp;D/2022/GitHub_pages_tutorial/">Tutorial:基于Hexo框架的GitHub个人主页搭建教程（前篇）</a></li><li><a href="http://tanglab.pku.edu.cn/2022/11/24/R&amp;D/2022/GitHub_pages_tutorial_sequel/">Tutorial:基于Hexo框架的GitHub个人主页搭建教程（后篇）</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;这个文件会不断更新&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这两天外面下雨闲着没事准备做一个博客，看网上说要什么搞个域名、买个服务器啊、然后部署啊之类的，觉得有点麻烦，我怕这种麻烦会让我还没开始就结束了写博客之旅，所以就准备用github来托管一下博客，这个比较方便</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>test_my_site</title>
    <link href="https://eternal-bug.github.io/2023/06/17/test-my-site/"/>
    <id>https://eternal-bug.github.io/2023/06/17/test-my-site/</id>
    <published>2023-06-17T10:06:09.000Z</published>
    <updated>2023-06-17T10:06:09.948Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://eternal-bug.github.io/2023/06/17/hello-world/"/>
    <id>https://eternal-bug.github.io/2023/06/17/hello-world/</id>
    <published>2023-06-17T10:03:25.283Z</published>
    <updated>1985-10-26T08:15:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>

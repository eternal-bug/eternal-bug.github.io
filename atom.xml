<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>eternal-bug的博客</title>
  
  
  <link href="https://eternal-bug.github.io/atom.xml" rel="self"/>
  
  <link href="https://eternal-bug.github.io/"/>
  <updated>2024-06-09T15:01:25.704Z</updated>
  <id>https://eternal-bug.github.io/</id>
  
  <author>
    <name>eternal-bug</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ButterFly主题的调教</title>
    <link href="https://eternal-bug.github.io/2024/06/09/ButterFly%E4%B8%BB%E9%A2%98%E7%9A%84%E8%B0%83%E6%95%99/"/>
    <id>https://eternal-bug.github.io/2024/06/09/ButterFly%E4%B8%BB%E9%A2%98%E7%9A%84%E8%B0%83%E6%95%99/</id>
    <published>2024-06-09T15:01:25.000Z</published>
    <updated>2024-06-09T15:01:25.704Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>使用github和Hexo搭建个人博客</title>
    <link href="https://eternal-bug.github.io/2023/06/18/%E4%BD%BF%E7%94%A8github%E5%92%8CHexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://eternal-bug.github.io/2023/06/18/%E4%BD%BF%E7%94%A8github%E5%92%8CHexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2023-06-18T10:06:09.000Z</published>
    <updated>2024-06-10T05:26:38.421Z</updated>
    
    <content type="html"><![CDATA[<p><strong>这个文件会不断更新</strong></p><p>这两天外面下雨闲着没事准备做一个博客，看网上说要什么搞个域名、买个服务器啊、然后部署啊之类的，觉得有点麻烦，我怕这种麻烦会让我还没开始就结束了写博客之旅，所以就准备用<code>github</code>来托管一下博客，这个比较方便。唯一不好的就是国内上<code>github</code>不稳定，网速还慢，但是相较于在<code>CSDN</code>这个<code>（CSDN Steals Documents on Network）</code>上写博客对于身心健康来说是大有脾益的；相较于<code>gitee</code>的代码审核，<code>github</code>可以即时展示。</p><p>本文主要参考的<a href="https://zhuanlan.zhihu.com/p/26625249">GitHub+Hexo 搭建个人网站详细教程</a>进行，为了简洁，关于工具的详细介绍这里不赘述，只写关键的代码部分。</p><p><strong>注意：下面的操作均是在windows系统上进行。</strong></p><h2 id="介绍">介绍</h2><p>有关于Hexo是什么和github这里不多说，只说说比较的关键的和写博客密切相关的东西。我个人理解的<code>github + Hexo</code>的博客的流程图：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">         编写markdown格式的博文</span><br><span class="line">                  |</span><br><span class="line">                  v</span><br><span class="line">     使用Hexo把markdown转换为html文件</span><br><span class="line">                  |</span><br><span class="line">                  v</span><br><span class="line">       使用Hexo把文件上传到github</span><br><span class="line">                  |</span><br><span class="line">                  v</span><br><span class="line">访问xxx.github.io（github是公网大家都能访问）</span><br><span class="line">                  |</span><br><span class="line">                  v</span><br><span class="line">    github按照对应路径给出对应的静态html文件</span><br><span class="line">                  |</span><br><span class="line">                  v</span><br><span class="line">             浏览器渲染页面</span><br></pre></td></tr></table></figure><p><code>hexo</code>就是一个比较方便的把你写的markdown的文章按照你指定的主题转换为html文件的工具，也就是说除了hexo你也可以用其他的工具比如Hugo，甚至是你自己手写html然后放到github都可以；github实际上就是按照特定的路径把你事先准备好的html文件给显示出来，这就是托管作用。</p><p>比如可以看<a href="https://github.com/Haojen/haojen.github.io">hexo-theme-Claudia作者的github博客</a>，里面就是按照日期的文件夹，下面对应的就是一个<code>index.html</code>文件，当然了，还会有一些<code>css</code>、<code>js</code>文件。</p><h2 id="安装npm">安装npm</h2><p>下载windows的node：<a href="https://nodejs.org/dist/v18.16.0/node-v18.16.0-x64.msi%EF%BC%8C%E5%8F%8C%E5%87%BB%E8%BF%9B%E8%A1%8C%E5%AE%89%E8%A3%85%E3%80%82">https://nodejs.org/dist/v18.16.0/node-v18.16.0-x64.msi，双击进行安装。</a></p><p>安装之后打开cmd测试一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><blockquote><p>在对应的文件夹右键，打开cmd（或者直接在任务栏的搜索里面搜索cmd）。如果没有，我推荐再安装一个ConEmu，然后右键会出现一个<code>ConEmu Here</code>。</p></blockquote><p>安装hexo插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><blockquote><p>如果出现下面的报错：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm ERR! code CERT_HAS_EXPIRED</span><br><span class="line">npm ERR! errno CERT_HAS_EXPIRED</span><br><span class="line">npm ERR! request to https://registry.npm.taobao.org/hexo-asset-image failed, reason: certificate has expired</span><br></pre></td></tr></table></figure><p>运行下面的代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm cache clean --force</span><br><span class="line">npm config <span class="built_in">set</span> strict-ssl <span class="literal">false</span></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></blockquote><h2 id="安装git">安装git</h2><p>进入<a href="https://git-scm.com/download/win">git for windows</a>下载<code>git</code>，下载完成之后安装。完成之后在桌面右键，看是否多了两个选项：<code>git GUI here</code>、<code>git bash here</code>。</p><h2 id="初始化博客">初始化博客</h2><p>新建一个文件夹，比如<code>D:/博客/</code>，（这个文件夹是需要比较稳定的，不能放在随手不注意给删除了地方比如桌面之类的）。打开cmd，然后输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这里文件夹的路径你可以修改为其他位置</span></span><br><span class="line">md D:/博客</span><br><span class="line"><span class="built_in">cd</span> D:/博客</span><br></pre></td></tr></table></figure><p>进入这个文件夹，之后输出下面的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新建一个hexo的项目（blog可以更改为你认为合适的名字）</span></span><br><span class="line">hexo init blog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入新建项目的内部</span></span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line"><span class="comment"># 新建一个文章名叫test_my_site</span></span><br><span class="line">hexo new test_my_site</span><br><span class="line"><span class="comment"># 启动本地服务</span></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>你会看到在cmd中出现这些文字：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>打开浏览器，输入<code>http://localhost:4000</code>，你可以一个Hexo的地平线的网页，表示你创建成功了。</p><h2 id="更改主题">更改主题</h2><p>默认的主题有点历史感，目前我个人喜欢<a href="https://github.com/Haojen/hexo-theme-Claudia">Haojen/hexo-theme-Claudia</a> - <a href="https://haojen.github.io/Claudia-theme-blog/">Demo</a></p><p>如果上面服务开启了，先<code>ctrl + c</code>关闭掉，然后输入下面的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/Haojen/hexo-theme-Claudia.git themes/Claudia</span><br></pre></td></tr></table></figure><blockquote><p>如果上面git clone不下来，可以直接下载<a href="https://codeload.github.com/Haojen/hexo-theme-Claudia/zip/refs/heads/master">hexo-theme-Claudia.zip</a>，然后把文件夹解压放到<code>themes</code>文件夹里面，然后把文件夹名称更改为<code>Claudia</code>。</p></blockquote><p>然后下载这个主题的依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注意安装下面的包一定是要在blog根目录下</span></span><br><span class="line"><span class="built_in">cd</span> D:/博客/blog</span><br><span class="line"></span><br><span class="line">npm install hexo-renderer-pug </span><br><span class="line">npm install hexo-renderer-dartsass</span><br><span class="line">npm install hexo-generator-search</span><br><span class="line"></span><br><span class="line"><span class="comment"># if you need RSS, you must be install this plugin</span></span><br><span class="line">npm install hexo-generator-feed</span><br><span class="line"></span><br><span class="line"><span class="comment"># Flowchat</span></span><br><span class="line">npm install hexo-filter-flowchart        </span><br><span class="line"><span class="comment"># Math</span></span><br><span class="line">npm install hexo-renderer-mathjax</span><br></pre></td></tr></table></figure><p>打开<code>blog/_config.yml</code>文件，将下面这一行修改为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># theme: landscape</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">Claudia</span></span><br></pre></td></tr></table></figure><p>保存，再次输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>继续在浏览器中输入<code>http://localhost:4000</code>查看主题是否更改了。</p><h2 id="编写文章">编写文章</h2><p>写的文章都是放在<code>D:/博客/blog/source/_posts</code>下面，你可以看到之前我们生成的<code>test-my-site.md</code>文件，这里的笔记都是使用<code>markdown</code>格式编写的，如果不了解这个格式可以搜索<a href="https://markdown.com.cn/basic-syntax/">markdown语法</a>学习。</p><p>比如这里我想写一个新的文章，名叫<code>使用github和Hexo搭建个人博客</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;使用github和Hexo搭建个人博客&quot;</span></span><br></pre></td></tr></table></figure><p>然后里面写上这些内容：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 使用github + Hexo搭建个人博客</span><br><span class="line">date: 2023-06-17 22:31:58</span><br><span class="line"><span class="section">tags:</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 1. 安装node</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 2. 安装git</span></span><br><span class="line"></span><br><span class="line"><span class="section">## ...</span></span><br></pre></td></tr></table></figure><blockquote><p>注意文章中<code>title</code>、<code>date</code>、<code>tags</code>之类的东西不要删除掉，这是用来对文章进行排序和显示博文标题的。</p></blockquote><p>以后在编写文章的时候推荐使用一个markdown的编辑器，我这里用的是<code>Typora</code>的历史版本（免费的那一版，我是用的<code>0.9.92</code>版），然后可以在里面编写好粘贴在使用<code>hexo new</code>生成的文件下面，然后修改一下<code>title</code>、<code>date</code>、<code>tags</code>的内容。</p><h2 id="其他调整">其他调整</h2><p>有一些信息是默认的，需要更改为自己的信息，下面是一些常见的需要更改的地方：</p><p><strong>1) Hexo的配置文件</strong></p><p>这里打开的是<code>blog/_config.yml</code>文件，里面的这几项最好修改：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 你的博客的站点的名称</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">eternal-bug的博客</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">一个喜欢牵着骆驼、带着闪亮的R形状的戒指的白菜哥。</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">&quot;生物信息&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 作者</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">eternal-bug</span></span><br><span class="line"><span class="comment"># 语言</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="comment"># 时区</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 网站地址（更改为你自己的github博客的地址）</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://eternal-bug.github.io</span></span><br></pre></td></tr></table></figure><blockquote><p>注意，yml格式的<code>:</code>后面一定要有一个空格，不然这个会识别不出来，除了中文文字和句子中的标点之外，其他所有逗号空格，都需要是在英文输入状态下输入。</p></blockquote><h2 id="上传到github">上传到github</h2><p>现在是在本地查看，需要将这些东西上传到github上可以让其他人能访问到。</p><p><strong>1) github注册</strong></p><p>如果你没有github，需要注册一个github，新建一个GitHub账号，具体怎么申请，这里不赘述，如果有你直接登录就可以。</p><p><strong>2) 新建仓库</strong></p><p>申请好账号和登录github之后，你需要点击右上角的<code>+</code>，然后<code>New repository</code>，在<code>Repository Name</code>下面填上<code>你的github名字.github.io</code>（<strong>必须这么写</strong>，比如我的github的名字是<code>eternal-bug</code>，那么我就写上<code>eternal-bug.github.io</code>），其他的不用动，只需要给<code>Add a README.md</code>前面打勾。这个时候你可以打开<code>https://eternal-bug.github.io/</code>就已经可以访问了（<code>eternal-bug</code>更改为你的github的名字），只不过是默认页面。</p><p><strong>3) 添加SSH关联</strong></p><p>因为上传是需要口令的，这里需要申请一个口令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置用户名</span></span><br><span class="line">git config --global user.name eternal-bug</span><br><span class="line"><span class="comment"># 输入申请github账号时候的邮箱</span></span><br><span class="line">git config --global user.email xxxxxxxxxx@qq.com</span><br></pre></td></tr></table></figure><blockquote><p>第一次登录时，Git会提示你输入密码，但出于保密因素，除“Enter your password: ”这行系统提示消息外，命令行不会显示任何字符，也不会在你输入或删除字符时用增减星号（井号）表示，因此输入密码时，最好放慢速度，避免因打字过快而输错。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 申请口令</span></span><br><span class="line">ssh-keygen -t rsa -C xxxxxxxxxx@qq.com</span><br></pre></td></tr></table></figure><p>会弹出下面的话，直接回车就好了（这是是让你上传github代码的时候输入的密码，因为这是我自己的电脑，密钥文件也是存在我这里这里，所以这个不需要设置密码）：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Enter file in which to save the key (/c/Users/tanglab_lzh/.ssh/id_rsa):</span><br><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br></pre></td></tr></table></figure><p>完成之后，会在你的电脑的<code>C:\Users\XXX\.ssh</code>下面有（XXX表示你的电脑的用户名字）</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id_rsa</span><br><span class="line">id_rsa.pub</span><br></pre></td></tr></table></figure><p>两个文件。打开<code>id_rsa.pub</code>，然后按下<code>ctrl+a</code>选中所有的文本。</p><p>再次进入到github的界面，<code>点击个人头像</code>-&gt;<code>Setting</code>-&gt;点击<code>SSH and GPG keys</code>-&gt;点击SSH keys右侧<code>New SSH key</code>，在<code>title</code>里面填上你自己认识的名称，然后在key一栏中粘贴刚才从<code>id_rsa.pub</code>文件中复制过来的内容。点击<code>Add SSH key</code>完成口令的添加。</p><p><strong>4) 上传</strong></p><p>修改<code>blog/_config.yml</code>中的对应内容，拉到最下面：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:eternal-bug/eternal-bug.github.io.git</span></span><br><span class="line">  <span class="comment"># 早些时候github主分支是master，但是从2020年10月01日开始美国为了政治正确，将master分支名称更改为了main，所以这里与时俱进写为main</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><p>回到本地，现在需要上传，进入<code>blog</code>文件夹，然后输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 清理之前生成的静态文件</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="comment"># 生成静态文件</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="comment"># 将文件推到github上面</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>如果出现：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host &#x27;github.com (xx.xxx.xxx.xxx)&#x27; can&#x27;t be established.</span><br><span class="line">ECDSA key fingerprint is SHA256:xxxxxxxxxxxxxxxxxxxxxx/xxxxxxx/xxxx.</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])?</span><br></pre></td></tr></table></figure><p>输入<code>yes</code>，回车，如果出现：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase</span><br></pre></td></tr></table></figure><p>直接回车。</p><p>最后如果出现：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Deploy done: git</span><br></pre></td></tr></table></figure><p>表示上传成功，这个时候可以去你的github上查看。</p><blockquote><p><strong>注意</strong></p><p>因为之前很多教程是让把<code>branch: </code>写为<code>branch: master</code>的，如果你上传之后发现github的博客文件夹中的文件没有变化，这是因为现在主分支是<code>main</code>，一般可以把<code>master</code>合并到<code>main</code>中，但是相对于来说步骤比较多，这里直接把<code>branch: master</code>更改为<code>branch: main</code>然后再<code>hexo g</code>一次就可以了。</p></blockquote><h2 id="查看效果">查看效果</h2><p>打开网址<code>https://eternal-bug.github.io</code>查看效果（这里你需要把<code>eternal-bug</code>更改为你的github的名字）。如果显示github的404，检查一下你在<code>New repository</code>生成的文件的名称是否正确。</p><h2 id="更多优化">更多优化</h2><p>这里我们只是测试了一下基本的功能，把最主要的步骤走了一遍，但是页面不是很好看细节不够，还有更加丰富的东西去探索。</p><h3 id="分门别类">分门别类</h3><p><strong>0) 博客项目说明</strong></p><p><code>blog/public</code>的目录下没有一个<code>README.md</code>文件，在你的github的页面，比如<code>https://github.com/eternal-bug/eternal-bug.github.io</code>下面，点进去没有介绍，这个不是必要的，但是为了更加完整，可以在上面执行<code>hexo g</code>把本地的文件上传的时候，放一个<code>README.md</code>到<code>blog/public</code>里面，当然你可以一直放在这个文件夹里面随时更改。</p><p><strong>1) 文章标签</strong></p><p>在写的博文多了之后，如果按照时间线或者一页一页的去找是很麻烦的（不过<code>Claudia</code>主题包含了全文搜索的功能可以用一下），需要对文章分类，可以通过打标签的方式去给博文分类。</p><p><strong>2) 关于页面</strong></p><p>一个博客没有关于自己的页面你写着博客就没劲啊，在这里可以介绍一下自己。</p><p><strong>3) 404页面</strong></p><p>如果不设置这个页面，在网页访问出错（比如原来你写了某一篇博客，但是后来更改了名称或者删除，别人保存了网址书签，再去访问）会出现的页面，如果不设置<code>404</code>的页面，会简单的弹出灰扑扑的<code>404</code>怼到浏览器面前。</p><h3 id="嵌入图片">嵌入图片</h3><p><strong>1) 图片</strong></p><p>在编写文章的时候，内部插入的图片的方法是可以将图片放在本地，然后在typora中编辑markdown文件写<code>![image](/path/to/image.jpg)</code>等等方式，这样做本地可以显示，在hexo将博客上传到github的时候就没了，需要按照特定的方式来放图片以便hexo可以将图片上传到github，以github作为图床来得到图片的路径，下面是具体做法：</p><p>安装npm的包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>找到npm安装包的路径<code>D:/博客/node_modules/hexo-asset-image/index.js</code>，将它的内容替换为如下内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line">     </span><br><span class="line"><span class="comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getPosition</span>(<span class="params">str, m, i</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> str.<span class="title function_">split</span>(m, i).<span class="title function_">join</span>(m).<span class="property">length</span>;</span><br><span class="line">&#125;</span><br><span class="line">     </span><br><span class="line"><span class="keyword">var</span> version = <span class="title class_">String</span>(hexo.<span class="property">version</span>).<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&#x27;after_post_render&#x27;</span>, <span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> config = hexo.<span class="property">config</span>;</span><br><span class="line">  <span class="keyword">if</span>(config.<span class="property">post_asset_folder</span>)&#123;</span><br><span class="line">       <span class="keyword">var</span> link = data.<span class="property">permalink</span>;</span><br><span class="line">   <span class="keyword">if</span>(version.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; <span class="title class_">Number</span>(version[<span class="number">0</span>]) == <span class="number">3</span>)</span><br><span class="line">      <span class="keyword">var</span> beginPos = <span class="title function_">getPosition</span>(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">var</span> beginPos = <span class="title function_">getPosition</span>(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">3</span>) + <span class="number">1</span>;</span><br><span class="line">   <span class="comment">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span></span><br><span class="line">   <span class="keyword">var</span> endPos = link.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>;</span><br><span class="line">    link = link.<span class="title function_">substring</span>(beginPos, endPos);</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">var</span> toprocess = [<span class="string">&#x27;excerpt&#x27;</span>, <span class="string">&#x27;more&#x27;</span>, <span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; toprocess.<span class="property">length</span>; i++)&#123;</span><br><span class="line">      <span class="keyword">var</span> key = toprocess[i];</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">var</span> $ = cheerio.<span class="title function_">load</span>(data[key], &#123;</span><br><span class="line">        <span class="attr">ignoreWhitespace</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">xmlMode</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">lowerCaseTags</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">decodeEntities</span>: <span class="literal">false</span></span><br><span class="line">      &#125;);</span><br><span class="line">     </span><br><span class="line">      $(<span class="string">&#x27;img&#x27;</span>).<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">       <span class="keyword">if</span> ($(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>))&#123;</span><br><span class="line">           <span class="comment">// For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.</span></span><br><span class="line">           <span class="keyword">var</span> src = $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>).<span class="title function_">replace</span>(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">           <span class="keyword">if</span>(!<span class="regexp">/http[s]*.*|\/\/.*/</span>.<span class="title function_">test</span>(src) &amp;&amp;</span><br><span class="line">              !<span class="regexp">/^\s*\//</span>.<span class="title function_">test</span>(src)) &#123;</span><br><span class="line">             <span class="comment">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span></span><br><span class="line">             <span class="comment">// In addition, to support multi-level local directory.</span></span><br><span class="line">             <span class="keyword">var</span> linkArray = link.<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>).<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">elem</span>)&#123;</span><br><span class="line">               <span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">             &#125;);</span><br><span class="line">             <span class="keyword">var</span> srcArray = src.<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>).<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">elem</span>)&#123;</span><br><span class="line">               <span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span> &amp;&amp; elem != <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">             &#125;);</span><br><span class="line">             <span class="keyword">if</span>(srcArray.<span class="property">length</span> &gt; <span class="number">1</span>)</span><br><span class="line">               srcArray.<span class="title function_">shift</span>();</span><br><span class="line">             src = srcArray.<span class="title function_">join</span>(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">             $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>, config.<span class="property">root</span> + link + src);</span><br><span class="line">             <span class="variable language_">console</span>.<span class="property">info</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;update link as:--&gt;&quot;</span>+config.<span class="property">root</span> + link + src);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">           <span class="variable language_">console</span>.<span class="property">info</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;no src attr, skipped...&quot;</span>);</span><br><span class="line">           <span class="variable language_">console</span>.<span class="property">info</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>($(<span class="variable language_">this</span>));</span><br><span class="line">       &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] = $.<span class="title function_">html</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>编辑<code>blog</code>文件夹下的<code>_config.yml</code>文件，将第43行的：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>替换为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">marked:</span></span><br><span class="line">  <span class="attr">prependRoot:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">postAsset:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>保存一下。</p><p>这个时候新建一个博客用来测试图片：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;测试图片&quot;</span></span><br></pre></td></tr></table></figure><p>在新建博客之后，会有一些与之前不一样的地方，除了生成一个<code>测试图片插入.md</code>文件之外，还额外多了一个一摸一样名字的文件夹<code>测试图片插入</code>，这里你随便找一张图片比如叫<code>test.jpg</code>放到这个文件夹里面。</p><p>在对应的markdown文件中写上：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">image</span>](<span class="link">test.jpg</span>)</span><br></pre></td></tr></table></figure><p>然后hexo本地预览一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>之前你写的博客也想要添加图片？可以手工在<code>blog/source/_posts</code>下建立一个和文章markdown文件相同名称的文件夹，把图片放进去，更改markdown文件，用hexo再生成一下就行了。</p><p><strong>2) 字体</strong></p><h3 id="评论系统">评论系统</h3><p>为了方便我使用的基于GitHub Discussions的评论的<code>giscus</code>插件，好处是自己方便，访客不是太方便，他们想要评论需要登录github，授权github作为评论账号。具体做法如下：</p><p><strong>1. 创建github仓库</strong></p><p>进入你自己的github界面，点击头像，选择<code>your repositories</code>，点击<code>New</code>新建一个仓库，名称我这里就写为<code>giscus</code>，点击<code>Create repositories</code>（一定不要设置为<code>Private</code>）。这个时候是位于这个仓库下面，点击仓库的<code>Setting</code>，找到<code>Features</code>，下面有一个<code>Discussions</code>栏目前面有一个小框，给小框打上勾。</p><p><strong>2. 安装giscus应用</strong></p><p>点击这个链接<a href="https://github.com/apps/giscus">giscus github apps</a>，点击<code>Install</code>，在下面的选项中选择<code>Only select repositories</code>，选择你刚才新建的那个仓库（这里我就是选的<code>eternal-bug/giscus</code>）。点击<code>Install</code>。</p><p><strong>3. giscus配置</strong></p><p>点击这个链接<a href="https://giscus.app/zh-CN">giscus配置</a>，拉到<code>仓库</code>这里，有一个输入框，输入框里面填上仓库的名称（这里我填写的是<code>eternal-bug/giscus</code>），在页面映射部分选择<code>Discussion 的标题包含页面的URL</code>，然后在<code>Discussion 分类</code>的下拉框里面选择<code>Announcements</code>。</p><p><strong>4. 复制代码到github中</strong><br>在<code>启用 giscus</code>下面有一段代码，你复制这个代码放到你markdown文章的末尾：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://giscus.app/client.js&quot;</span></span><br><span class="line">        data-repo=<span class="string">&quot;eternal-bug/giscus&quot;</span></span><br><span class="line">        data-repo-id=<span class="string">&quot;xxxxxxxxxxxxx&quot;</span></span><br><span class="line">        data-category=<span class="string">&quot;Announcements&quot;</span></span><br><span class="line">        data-category-id=<span class="string">&quot;xxxxxxxxxxxx&quot;</span></span><br><span class="line">        data-mapping=<span class="string">&quot;url&quot;</span></span><br><span class="line">        data-strict=<span class="string">&quot;0&quot;</span></span><br><span class="line">        data-reactions-enabled=<span class="string">&quot;1&quot;</span></span><br><span class="line">        data-emit-metadata=<span class="string">&quot;0&quot;</span></span><br><span class="line">        data-input-position=<span class="string">&quot;bottom&quot;</span></span><br><span class="line">        data-theme=<span class="string">&quot;preferred_color_scheme&quot;</span></span><br><span class="line">        data-lang=<span class="string">&quot;zh-CN&quot;</span></span><br><span class="line">        crossorigin=<span class="string">&quot;anonymous&quot;</span></span><br><span class="line">        <span class="keyword">async</span>&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>注意：不要放在代码框中。</p><p>除此之外，使用<code>Twikoo</code>插件你可以将评论系统保存在腾讯云上，评论的时候游客只需要在相应的文本框中填入必要的信息即可评论，详细可以看这篇文章<a href="https://zhuanlan.zhihu.com/p/645394881">Hexo + Butterfly 评论功能</a>。</p><h3 id="搜索系统">搜索系统</h3><p>后面在研究一下。</p><h3 id="嵌入多媒体">嵌入多媒体</h3><p><strong>网易云音乐</strong></p><p>比如你想添加一个网易云音乐的播放按钮，你可以在markdown中添加这个代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">marginwidth</span>=<span class="string">&quot;0&quot;</span> <span class="attr">marginheight</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">330</span> <span class="attr">height</span>=<span class="string">86</span> <span class="attr">src</span>=<span class="string">&quot;//music.163.com/outchain/player?type=2&amp;id=1956202531&amp;auto=0&amp;height=66&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=1956202531&auto=0&height=66"></iframe><p>上面的<code>auto</code>设置为<code>0</code>是不自动播放，设置为<code>1</code>是自动播放。</p><blockquote><p>如何查找你想要的歌曲的代码呢？首先打开<a href="https://music.163.com/">网易云音乐</a>（其他的音乐我暂时还没尝试应该也可以），搜索或者查找到你想要的歌曲，这里我查找《快乐老家》，点击“生成外链播放器”，把文本框里面的<code>&lt;iframe&gt;...&lt;/iframe&gt;</code>复制过来，直接粘贴到markdown相应的位置（不需要放到代码框里面）。</p></blockquote><p><strong>bilibili的视频</strong></p><p>比如你想添加一个b站的视频的播放界面，可以在对应的视频下面比如<a href="https://www.bilibili.com/video/BV1hT4y1Y7RF/?spm_id_from=333.337.search-card.all.click">天线宝宝央配旧版开头/压箱底自收藏</a>，点击<code>分享按钮</code>，然后选择<code>嵌入代码</code>，代码会复制到你的剪贴板中：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=938030801&amp;bvid=BV1hT4y1Y7RF&amp;cid=573164441&amp;page=1&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p>但是这个页面的展示不是很完美，可以把上面的代码中添加一些东西：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=938030801&amp;bvid=BV1hT4y1Y7RF&amp;cid=573164441&amp;page=1&amp;as_wide=1&amp;high_quality=1&amp;danmaku=0&amp;autoplay=0&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;500&quot;</span> <span class="attr">sandbox</span>=<span class="string">&quot;allow-top-navigation allow-same-origin allow-forms allow-scripts&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><iframe src="//player.bilibili.com/player.html?aid=938030801&bvid=BV1hT4y1Y7RF&cid=573164441&page=1&as_wide=1&high_quality=1&danmaku=0&autoplay=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="500" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"> </iframe><p>主要调整的是宽度和高度、再就是不进行自动播放。</p><p><strong>百度地图</strong></p><p>在<a href="https://map.baidu.com/">百度地图</a>里面找到你需要找的地方，点击百度给与的地点之后，点击<code>分享</code>，然后把网址复制<code>https://j.map.baidu.com/58/rnJ</code>下来，填到下面的<code>src</code>后面：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://j.map.baidu.com/58/rnJ&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;600px&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;No&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><iframe src="https://j.map.baidu.com/58/rnJ" width="100%" height="600" frameborder="0" scrolling="No"></iframe><p>上面的<code>width</code>和<code>height</code>可以根据你自己的需要更改。</p><p><strong>高级设置</strong></p><p>你如果对于<code>html</code>和<code>css</code>语法比较了解的，可以自己去修改主题的内部的东西得到你自己想要的效果。</p><h3 id="其他主题">其他主题</h3><p>除了上面主题之外，你也可以去<a href="https://hexo.io/themes/">hexo主题列表 - themes</a>看更多的主题，注意最好是选择标记有<code>#中文</code>的主题，比如<code>Next</code>、<code>ButterFly</code>主题。但是我觉得<code>Next</code>主题过于简洁，而且很容易和其他人的博客“撞衫”，色调太单调了；<code>ButterFly</code>主题也还不错可以试一试。</p><p>你可以按照上面的更换主题的方式进行更换，只需要注意安装主题的以来包，然后再对主题的配置进行细节的配置。</p><h3 id="访问统计">访问统计</h3><p>可以使用百度和谷歌的统计。这里使用<code>ButterFly</code>主题了，默认自带了流量和访问计数统计。强烈推荐这个主题😄！</p><hr><p>下面会详细写一下<code>ButterFly</code>主题的调教。</p><h2 id="参考">参考</h2><ul><li><a href="https://hexo.io/zh-cn/docs/index.html">Hexo文档</a></li></ul><p>搭建流程</p><ul><li><a href="https://zhuanlan.zhihu.com/p/35668237">超详细Hexo+Github博客搭建小白教程</a></li><li><a href="http://tanglab.pku.edu.cn/2022/11/24/R&amp;D/2022/GitHub_pages_tutorial/">Tutorial:基于Hexo框架的GitHub个人主页搭建教程（前篇）</a></li><li><a href="http://tanglab.pku.edu.cn/2022/11/24/R&amp;D/2022/GitHub_pages_tutorial_sequel/">Tutorial:基于Hexo框架的GitHub个人主页搭建教程（后篇）</a></li></ul><p>主题</p><ul><li><a href="https://www.zhihu.com/question/24422335/answer/1632402674">有哪些好看的 Hexo 主题？</a></li><li><a href="https://www.zhihu.com/question/24422335/answer/115800792">有哪些好看的 Hexo 主题？</a></li></ul><p>图片</p><ul><li><a href="https://zhuanlan.zhihu.com/p/645679541">解决Hexo+Github+Typora图片无法正确显示的问题</a></li></ul><p>iframe</p><ul><li><a href="https://blog.zezeshe.com/archives/use-bilibili-iframe-player.html">使用更干净的哔哩哔哩iframe播放器</a></li><li><a href="https://blog.csdn.net/xinshou_caizhu/article/details/94028606">接入B站iframe视频(bilibili引用视频)</a></li></ul><script src="https://giscus.app/client.js" data-repo="eternal-bug/giscus" data-repo-id="R_kgDOMHOH6Q" data-category="Announcements" data-category-id="DIC_kwDOMHOH6c4Cf-m4" data-mapping="url" data-strict="0" data-reactions-enabled="1" data-emit-metadata="0" data-input-position="bottom" data-theme="preferred_color_scheme" data-lang="zh-CN" crossorigin="anonymous" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;这个文件会不断更新&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这两天外面下雨闲着没事准备做一个博客，看网上说要什么搞个域名、买个服务器啊、然后部署啊之类的，觉得有点麻烦，我怕这种麻烦会让我还没开始就结束了写博客之旅，所以就准备用&lt;code&gt;github&lt;/code&gt;来</summary>
      
    
    
    
    
    <category term="Hexo" scheme="https://eternal-bug.github.io/tags/Hexo/"/>
    
    <category term="github" scheme="https://eternal-bug.github.io/tags/github/"/>
    
    <category term="博客" scheme="https://eternal-bug.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
